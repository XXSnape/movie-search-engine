from aiogram.types import InlineKeyboardMarkup
from keyboards.inline.buttons.common import get_btn_for_end_watching_movies
from keyboards.inline.buttons.movie import get_buttons_for_back_to_movies, get_obj_btn
from keyboards.inline.buttons.person import (
    get_btn_for_back_to_persons,
    get_btn_for_person_details,
)
from keyboards.inline.callback_factory.movie_factory import MovieBackCbData
from keyboards.inline.keyboards.mixins.generate_kb import (
    GenerateInlineKeyboardMixin,
    SwitchItemsMixin,
)
from utils.enums.movie_data import ViewingMovieDetails


class InlineKbForPerson(GenerateInlineKeyboardMixin, SwitchItemsMixin):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ª—é–¥—å–º–∏
    """

    @classmethod
    def get_kb_to_switch_persons_and_view_details(
        cls, data_for_back: MovieBackCbData, title: str, length: int
    ) -> InlineKeyboardMarkup:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ª—é–¥–µ–π
        :param data_for_back: MovieBackCbData
        :param title: –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º
        :param length: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π
        :return: InlineKeyboardMarkup
        """
        idx = data_for_back.related_person_index
        buttons = get_buttons_for_back_to_movies(data_for_back, title)
        buttons.append(get_btn_for_person_details(data_for_back))
        cls._add_buttons_for_switch_items(
            data_for_back, buttons=buttons, idx=idx, length=length
        )
        buttons.append(get_btn_for_end_watching_movies(data_for_back.index))
        sizes = [1, 1, 1, 2, 1] if len(buttons) == 6 else [1]
        return cls._generate_inline_kb(data_with_buttons=buttons, sizes=sizes)

    @classmethod
    def get_kb_for_back_to_persons_and_view_other_projects(
        cls, data_for_back: MovieBackCbData, projects: list[int], title: str
    ) -> InlineKeyboardMarkup:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –∫ –ª—é–¥—è–º –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
        :param data_for_back: MovieBackCbData
        :param projects: —Å–ø–∏—Å–æ–∫ —Å id –ø—Ä–æ–µ–∫—Ç–æ–≤
        :param title: –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∏–ª—å–º–∞, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º
        :return: InlineKeyboardMarkup
        """
        buttons = get_buttons_for_back_to_movies(data_for_back, title)
        buttons.append(get_btn_for_back_to_persons(data_for_back))
        options = {
            ViewingMovieDetails.ACTOR_DETAILS: ViewingMovieDetails.ACTOR_PROJECTS,
            ViewingMovieDetails.DIRECTOR_DETAILS: ViewingMovieDetails.DIRECTOR_PROJECTS,
        }
        option = options[data_for_back.options]
        buttons.append(
            get_obj_btn(
                data_for_back,
                option,
                "–î—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ãüóÇÔ∏è",
                projects,
            )
        )
        buttons.append(get_btn_for_end_watching_movies(data_for_back.index))
        return cls._generate_inline_kb(data_with_buttons=buttons)
